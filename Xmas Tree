package excercises.xmas.tree;

public class ChristmasTree {
    private final char treeSymbol = '*';
    private char[] ornaments = {'+', 'o'};
    StringBuilder tree = new StringBuilder();

    public ChristmasTree() {}

    //TREE BUILDING METHOSD
    public void buildTree(int treeHight) {
        StringBuilder tree = new StringBuilder();

        //CREATE ROWS OF TREE LOOP
        for (int row = 0; row < treeHight; row++) {

            //ADDING INDENTATION LOOP
            for (int indentation = 0; indentation < treeHight - row - 1; indentation++) {
                tree.append(" ");
            }

            //ADDING TREE SYMBOL LOOP
            for (int symbol = 1; symbol <= (row * 2) + 1; symbol++) {
                tree.append(treeSymbol);
            }
            tree.append(System.lineSeparator());
        }
        System.out.println(tree.toString());
    }

    //TREE WITH REGULAR DECORATION BUILDING METHOD
    public void buildRegDecoratedTree(int treeHight) {
        StringBuilder tree = new StringBuilder();

        //CREATE ROWS OF TREE LOOP
        for (int row = 0; row < treeHight; row++) {

            //ADDING INDENTATION LOOP
            for (int indentation = 0; indentation < treeHight - row - 1; indentation++) {
                tree.append("   ");
            }

            //ADDING TREE SYMBOL WITH ORNAMENTS LOOP
            for (int symbol = 1; symbol <= (row * 2) + 1; symbol++) {
                int maxWidth = (row * 2) + 1;
                tree.append(treeSymbol);

                if (symbol > 0 && row != 0 && symbol < maxWidth) {
                    tree.append(ornaments[0]);
                    tree.append(ornaments[1]);
                }
            }
            tree.append(System.lineSeparator());
        }
        System.out.println(tree.toString());
    }
}

package excercises.xmas.tree;

import java.util.Scanner;

public class Xmas {
    public static void main(String[] args) {

        ChristmasTree tree = new ChristmasTree();
        Scanner inPut = new Scanner(System.in);

        System.out.println("Pass tree hight: ");
        int treeHight = inPut.nextInt();
        tree.buildTree(treeHight);
        tree.buildRegDecoratedTree(treeHight);
        inPut.close();
    }
}
